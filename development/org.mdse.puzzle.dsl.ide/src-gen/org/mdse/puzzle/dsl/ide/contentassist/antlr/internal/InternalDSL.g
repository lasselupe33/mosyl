/*
 * generated by Xtext 2.24.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.mdse.puzzle.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mdse.puzzle.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.mdse.puzzle.dsl.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePuzzle
entryRulePuzzle
:
{ before(grammarAccess.getPuzzleRule()); }
	 rulePuzzle
{ after(grammarAccess.getPuzzleRule()); } 
	 EOF 
;

// Rule Puzzle
rulePuzzle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPuzzleAccess().getGroup()); }
		(rule__Puzzle__Group__0)
		{ after(grammarAccess.getPuzzleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputs
entryRuleInputs
:
{ before(grammarAccess.getInputsRule()); }
	 ruleInputs
{ after(grammarAccess.getInputsRule()); } 
	 EOF 
;

// Rule Inputs
ruleInputs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputsAccess().getGroup()); }
		(rule__Inputs__Group__0)
		{ after(grammarAccess.getInputsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitTest
entryRuleUnitTest
:
{ before(grammarAccess.getUnitTestRule()); }
	 ruleUnitTest
{ after(grammarAccess.getUnitTestRule()); } 
	 EOF 
;

// Rule UnitTest
ruleUnitTest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitTestAccess().getGroup()); }
		(rule__UnitTest__Group__0)
		{ after(grammarAccess.getUnitTestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitTestInput
entryRuleUnitTestInput
:
{ before(grammarAccess.getUnitTestInputRule()); }
	 ruleUnitTestInput
{ after(grammarAccess.getUnitTestInputRule()); } 
	 EOF 
;

// Rule UnitTestInput
ruleUnitTestInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitTestInputAccess().getGroup()); }
		(rule__UnitTestInput__Group__0)
		{ after(grammarAccess.getUnitTestInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntergerLiteral
entryRuleIntergerLiteral
:
{ before(grammarAccess.getIntergerLiteralRule()); }
	 ruleIntergerLiteral
{ after(grammarAccess.getIntergerLiteralRule()); } 
	 EOF 
;

// Rule IntergerLiteral
ruleIntergerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntergerLiteralAccess().getGroup()); }
		(rule__IntergerLiteral__Group__0)
		{ after(grammarAccess.getIntergerLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
		(rule__StringLiteral__Group__0)
		{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
		(rule__BooleanLiteral__Group__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerVariable
entryRuleIntegerVariable
:
{ before(grammarAccess.getIntegerVariableRule()); }
	 ruleIntegerVariable
{ after(grammarAccess.getIntegerVariableRule()); } 
	 EOF 
;

// Rule IntegerVariable
ruleIntegerVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerVariableAccess().getGroup()); }
		(rule__IntegerVariable__Group__0)
		{ after(grammarAccess.getIntegerVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringVariable
entryRuleStringVariable
:
{ before(grammarAccess.getStringVariableRule()); }
	 ruleStringVariable
{ after(grammarAccess.getStringVariableRule()); } 
	 EOF 
;

// Rule StringVariable
ruleStringVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringVariableAccess().getGroup()); }
		(rule__StringVariable__Group__0)
		{ after(grammarAccess.getStringVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanVariable
entryRuleBooleanVariable
:
{ before(grammarAccess.getBooleanVariableRule()); }
	 ruleBooleanVariable
{ after(grammarAccess.getBooleanVariableRule()); } 
	 EOF 
;

// Rule BooleanVariable
ruleBooleanVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanVariableAccess().getGroup()); }
		(rule__BooleanVariable__Group__0)
		{ after(grammarAccess.getBooleanVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntergerLiteralParserRuleCall_0()); }
		ruleIntergerLiteral
		{ after(grammarAccess.getLiteralAccess().getIntergerLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0()); }
		ruleIntegerVariable
		{ after(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getStringVariableParserRuleCall_1()); }
		ruleStringVariable
		{ after(grammarAccess.getVariableAccess().getStringVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_2()); }
		ruleBooleanVariable
		{ after(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__0__Impl
	rule__Puzzle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getPuzzleAction_0()); }
	()
	{ after(grammarAccess.getPuzzleAccess().getPuzzleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__1__Impl
	rule__Puzzle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getPUZZLEKeyword_1()); }
	'PUZZLE'
	{ after(grammarAccess.getPuzzleAccess().getPUZZLEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__2__Impl
	rule__Puzzle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPuzzleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__3__Impl
	rule__Puzzle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getNameKeyword_3()); }
	'name'
	{ after(grammarAccess.getPuzzleAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__4__Impl
	rule__Puzzle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getPuzzleAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__5__Impl
	rule__Puzzle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getNameAssignment_5()); }
	(rule__Puzzle__NameAssignment_5)
	{ after(grammarAccess.getPuzzleAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__6__Impl
	rule__Puzzle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getDescriptionKeyword_6()); }
	'description'
	{ after(grammarAccess.getPuzzleAccess().getDescriptionKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__7__Impl
	rule__Puzzle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getPuzzleAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__8__Impl
	rule__Puzzle__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getDescriptionAssignment_8()); }
	(rule__Puzzle__DescriptionAssignment_8)
	{ after(grammarAccess.getPuzzleAccess().getDescriptionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__9__Impl
	rule__Puzzle__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getInputsAssignment_9()); }
	(rule__Puzzle__InputsAssignment_9)?
	{ after(grammarAccess.getPuzzleAccess().getInputsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__10__Impl
	rule__Puzzle__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPuzzleAccess().getTestsAssignment_10()); }
		(rule__Puzzle__TestsAssignment_10)
		{ after(grammarAccess.getPuzzleAccess().getTestsAssignment_10()); }
	)
	(
		{ before(grammarAccess.getPuzzleAccess().getTestsAssignment_10()); }
		(rule__Puzzle__TestsAssignment_10)*
		{ after(grammarAccess.getPuzzleAccess().getTestsAssignment_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Puzzle__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPuzzleAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getPuzzleAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inputs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__0__Impl
	rule__Inputs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getINPUTSKeyword_0()); }
	'INPUTS'
	{ after(grammarAccess.getInputsAccess().getINPUTSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__1__Impl
	rule__Inputs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInputsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__2__Impl
	rule__Inputs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInputsAccess().getVariablesAssignment_2()); }
		(rule__Inputs__VariablesAssignment_2)
		{ after(grammarAccess.getInputsAccess().getVariablesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getInputsAccess().getVariablesAssignment_2()); }
		(rule__Inputs__VariablesAssignment_2)*
		{ after(grammarAccess.getInputsAccess().getVariablesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInputsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitTest__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__0__Impl
	rule__UnitTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getUnitTestAction_0()); }
	()
	{ after(grammarAccess.getUnitTestAccess().getUnitTestAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__1__Impl
	rule__UnitTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getTESTKeyword_1()); }
	'TEST'
	{ after(grammarAccess.getUnitTestAccess().getTESTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__2__Impl
	rule__UnitTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__3__Impl
	rule__UnitTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getGroup_3()); }
	(rule__UnitTest__Group_3__0)?
	{ after(grammarAccess.getUnitTestAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__4__Impl
	rule__UnitTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getEXPECTSKeyword_4()); }
	'EXPECTS'
	{ after(grammarAccess.getUnitTestAccess().getEXPECTSKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__5__Impl
	rule__UnitTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getExpectedAssignment_5()); }
	(rule__UnitTest__ExpectedAssignment_5)
	{ after(grammarAccess.getUnitTestAccess().getExpectedAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__6__Impl
	rule__UnitTest__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getGroup_6()); }
	(rule__UnitTest__Group_6__0)?
	{ after(grammarAccess.getUnitTestAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitTest__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_3__0__Impl
	rule__UnitTest__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getINPUTSKeyword_3_0()); }
	'INPUTS'
	{ after(grammarAccess.getUnitTestAccess().getINPUTSKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_3__1__Impl
	rule__UnitTest__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_3__2__Impl
	rule__UnitTest__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitTestAccess().getInputsAssignment_3_2()); }
		(rule__UnitTest__InputsAssignment_3_2)
		{ after(grammarAccess.getUnitTestAccess().getInputsAssignment_3_2()); }
	)
	(
		{ before(grammarAccess.getUnitTestAccess().getInputsAssignment_3_2()); }
		(rule__UnitTest__InputsAssignment_3_2)*
		{ after(grammarAccess.getUnitTestAccess().getInputsAssignment_3_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitTest__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__0__Impl
	rule__UnitTest__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getON_FAILKeyword_6_0()); }
	'ON_FAIL'
	{ after(grammarAccess.getUnitTestAccess().getON_FAILKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__1__Impl
	rule__UnitTest__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getUnitTestAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__2__Impl
	rule__UnitTest__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getMsgKeyword_6_2()); }
	'msg'
	{ after(grammarAccess.getUnitTestAccess().getMsgKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__3__Impl
	rule__UnitTest__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getEqualsSignKeyword_6_3()); }
	'='
	{ after(grammarAccess.getUnitTestAccess().getEqualsSignKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__4__Impl
	rule__UnitTest__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getFailedMessageAssignment_6_4()); }
	(rule__UnitTest__FailedMessageAssignment_6_4)
	{ after(grammarAccess.getUnitTestAccess().getFailedMessageAssignment_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTest__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__Group_6__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_6_5()); }
	'}'
	{ after(grammarAccess.getUnitTestAccess().getRightCurlyBracketKeyword_6_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitTestInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTestInput__Group__0__Impl
	rule__UnitTestInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestInputAccess().getVariableAssignment_0()); }
	(rule__UnitTestInput__VariableAssignment_0)
	{ after(grammarAccess.getUnitTestInputAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTestInput__Group__1__Impl
	rule__UnitTestInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestInputAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getUnitTestInputAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitTestInput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitTestInputAccess().getOverwritingValueAssignment_2()); }
	(rule__UnitTestInput__OverwritingValueAssignment_2)
	{ after(grammarAccess.getUnitTestInputAccess().getOverwritingValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntergerLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntergerLiteral__Group__0__Impl
	rule__IntergerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntergerLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntergerLiteralAccess().getIntegerLiteralAction_0()); }
	()
	{ after(grammarAccess.getIntergerLiteralAccess().getIntegerLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntergerLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntergerLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntergerLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntergerLiteralAccess().getValueAssignment_1()); }
	(rule__IntergerLiteral__ValueAssignment_1)
	{ after(grammarAccess.getIntergerLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
	()
	{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
	(rule__StringLiteral__ValueAssignment_1)
	{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
	(rule__BooleanLiteral__ValueAssignment_1)
	{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerVariable__Group__0__Impl
	rule__IntegerVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
	()
	{ after(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerVariable__Group__1__Impl
	rule__IntegerVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerVariableAccess().getIntKeyword_1()); }
	'int'
	{ after(grammarAccess.getIntegerVariableAccess().getIntKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerVariable__Group__2__Impl
	rule__IntegerVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerVariableAccess().getNameAssignment_2()); }
	(rule__IntegerVariable__NameAssignment_2)
	{ after(grammarAccess.getIntegerVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerVariable__Group__3__Impl
	rule__IntegerVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerVariableAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getIntegerVariableAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerVariableAccess().getValueAssignment_4()); }
	(rule__IntegerVariable__ValueAssignment_4)
	{ after(grammarAccess.getIntegerVariableAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__0__Impl
	rule__StringVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getStringVariableAction_0()); }
	()
	{ after(grammarAccess.getStringVariableAccess().getStringVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__1__Impl
	rule__StringVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getStringKeyword_1()); }
	'string'
	{ after(grammarAccess.getStringVariableAccess().getStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__2__Impl
	rule__StringVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getNameAssignment_2()); }
	(rule__StringVariable__NameAssignment_2)
	{ after(grammarAccess.getStringVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__3__Impl
	rule__StringVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getStringVariableAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getValueAssignment_4()); }
	(rule__StringVariable__ValueAssignment_4)
	{ after(grammarAccess.getStringVariableAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanVariable__Group__0__Impl
	rule__BooleanVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
	()
	{ after(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanVariable__Group__1__Impl
	rule__BooleanVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanVariableAccess().getBoolKeyword_1()); }
	'bool'
	{ after(grammarAccess.getBooleanVariableAccess().getBoolKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanVariable__Group__2__Impl
	rule__BooleanVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanVariableAccess().getNameAssignment_2()); }
	(rule__BooleanVariable__NameAssignment_2)
	{ after(grammarAccess.getBooleanVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanVariable__Group__3__Impl
	rule__BooleanVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanVariableAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getBooleanVariableAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanVariableAccess().getValueAssignment_4()); }
	(rule__BooleanVariable__ValueAssignment_4)
	{ after(grammarAccess.getBooleanVariableAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Puzzle__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPuzzleAccess().getNameSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getPuzzleAccess().getNameSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__DescriptionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPuzzleAccess().getDescriptionSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getPuzzleAccess().getDescriptionSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__InputsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPuzzleAccess().getInputsInputsParserRuleCall_9_0()); }
		ruleInputs
		{ after(grammarAccess.getPuzzleAccess().getInputsInputsParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Puzzle__TestsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPuzzleAccess().getTestsUnitTestParserRuleCall_10_0()); }
		ruleUnitTest
		{ after(grammarAccess.getPuzzleAccess().getTestsUnitTestParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsAccess().getVariablesVariableParserRuleCall_2_0()); }
		ruleVariable
		{ after(grammarAccess.getInputsAccess().getVariablesVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__InputsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTestAccess().getInputsUnitTestInputParserRuleCall_3_2_0()); }
		ruleUnitTestInput
		{ after(grammarAccess.getUnitTestAccess().getInputsUnitTestInputParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__ExpectedAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTestAccess().getExpectedLiteralParserRuleCall_5_0()); }
		ruleLiteral
		{ after(grammarAccess.getUnitTestAccess().getExpectedLiteralParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTest__FailedMessageAssignment_6_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTestAccess().getFailedMessageSTRINGTerminalRuleCall_6_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getUnitTestAccess().getFailedMessageSTRINGTerminalRuleCall_6_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTestInputAccess().getVariableVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUnitTestInputAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitTestInputAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUnitTestInputAccess().getVariableVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTestInput__OverwritingValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTestInputAccess().getOverwritingValueLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getUnitTestInputAccess().getOverwritingValueLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntergerLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntergerLiteralAccess().getValueREALINTTerminalRuleCall_1_0()); }
		RULE_REALINT
		{ after(grammarAccess.getIntergerLiteralAccess().getValueREALINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerVariableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIntegerVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerVariableAccess().getValueREALINTTerminalRuleCall_4_0()); }
		RULE_REALINT
		{ after(grammarAccess.getIntegerVariableAccess().getValueREALINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringVariableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStringVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringVariableAccess().getValueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringVariableAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanVariableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBooleanVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanVariableAccess().getValueBOOLEANTerminalRuleCall_4_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanVariableAccess().getValueBOOLEANTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_REALINT : '-'? RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
