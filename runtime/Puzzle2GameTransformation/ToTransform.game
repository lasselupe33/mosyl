<?xml version="1.0" encoding="UTF-8"?>
<game:Game xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:constructs="http://org.mdse/constructs" xmlns:game="http://org.mdse/game" name="My puzzle" description="Some description">
  <entrypoint>
    <inputs>
      <nextStatement>
        <nextStatement>
          <nextStatement>
            <statement xsi:type="constructs:ReturnStatement">
              <expression xsi:type="constructs:VariableReference" variable="//@entrypoint/@inputs/@nextStatement/@statement/@variable"/>
            </statement>
          </nextStatement>
          <statement xsi:type="constructs:IfElseStatement">
            <condition xsi:type="constructs:ComparativeExpression">
              <expression1 xsi:type="constructs:IntegerLiteral"/>
              <expression2 xsi:type="constructs:VariableReference" variable="//@entrypoint/@inputs/@inputs/@variables.0"/>
            </condition>
            <elseStatement xsi:type="constructs:SetStatement" variable="//@entrypoint/@inputs/@nextStatement/@statement/@variable">
              <newValue xsi:type="constructs:IntegerLiteral" value="5"/>
            </elseStatement>
            <ifStatement xsi:type="constructs:SetStatement" variable="//@entrypoint/@inputs/@nextStatement/@statement/@variable">
              <newValue xsi:type="constructs:IntegerLiteral" value="2"/>
            </ifStatement>
          </statement>
        </nextStatement>
        <statement xsi:type="constructs:DeclareStatement">
          <variable xsi:type="constructs:IntegerVariable" name="declared" value="2"/>
        </statement>
      </nextStatement>
      <inputs>
        <variables xsi:type="constructs:IntegerVariable" name="myVar" value="2"/>
        <variables xsi:type="constructs:BooleanVariable" name="boolVar" value="true"/>
        <variables xsi:type="constructs:StringVariable" name="stringVar" value="Hello"/>
      </inputs>
    </inputs>
  </entrypoint>
  <tests failedMessage="Expected 5">
    <expected xsi:type="constructs:IntegerLiteral" value="5"/>
    <inputs variable="//@entrypoint/@inputs/@inputs/@variables.0">
      <overwritingValue xsi:type="constructs:IntegerLiteral"/>
    </inputs>
  </tests>
  <tests failedMessage="Expected 2">
    <expected xsi:type="constructs:IntegerLiteral" value="2"/>
    <inputs variable="//@entrypoint/@inputs/@inputs/@variables.0">
      <overwritingValue xsi:type="constructs:IntegerLiteral" value="1"/>
    </inputs>
  </tests>
</game:Game>
